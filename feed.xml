<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xmlns:media="http://search.yahoo.com/mrss/">
    <title>XS Tech Thoughts</title>
    <link href="https://korgano.github.io/feed.xml" rel="self" />
    <link href="https://korgano.github.io" />
    <updated>2024-04-17T14:22:58-04:00</updated>
    <author>
        <name>Xavier Santana</name>
    </author>
    <id>https://korgano.github.io</id>

    <entry>
        <title>Cybersecurity Project: Virtual Machines Aren&#x27;t Always The Solution</title>
        <author>
            <name>Xavier Santana</name>
        </author>
        <link href="https://korgano.github.io/cybersecurity-project-virtual-machines-arent-always-the-solution/"/>
        <id>https://korgano.github.io/cybersecurity-project-virtual-machines-arent-always-the-solution/</id>
        <media:content url="https://korgano.github.io/media/posts/11/rivage-AIIC6wCqkQc-unsplash.jpg" medium="image" />
            <category term="Tech"/>
            <category term="PC Hardware"/>
            <category term="PC"/>
            <category term="Cybersecurity Projects"/>
            <category term="Cybersecurity"/>

        <updated>2024-04-17T11:48:17-04:00</updated>
            <summary>
                <![CDATA[
                        <img src="https://korgano.github.io/media/posts/11/rivage-AIIC6wCqkQc-unsplash.jpg" alt="" />
                    Progress on this project has been slower than I'd like, mostly because of delays in obtaining latest gen hardware to&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                    <p><img src="https://korgano.github.io/media/posts/11/rivage-AIIC6wCqkQc-unsplash.jpg" class="type:primaryImage" alt="" /></p>
                <p>Progress on this project has been slower than I'd like, mostly because of delays in obtaining latest gen hardware to make this project more likely to succeed.</p>
<p>However, the delays were worth the trouble, because I'm going to be executing the practical elements of this project on the following system:</p>
<ul>
<li>Ryzen 7 7800X3D</li>
<li>Radeon RX 7900 XTX</li>
<li>PCI-E 5.0x2 NVMe SSD</li>
<li>32GB DDR5 RAM</li>
</ul>
<p>This might seem excessive, given the following requirements for running Unreal Engine 4:</p>
<ul>
<li>Operating System: Windows 10 64-bit</li>
<li>Processor: Quad-core Intel or AMD, 2.5 GHz or faster</li>
<li>Memory: 8 GB RAM</li>
<li>Video Card/DirectX Version: DirectX 11 or DirectX 12 compatible graphics card</li>
</ul>
<p>It should be easy to run a virtual machine in Virtual Box that meets all these requirements, right?</p>
<h2>Problem 1: Windows Virtual Machine Setup</h2>
<p>The first step, after installing Virtual Box, was creating the Windows VM to host Unreal Engine 4.27. This was not as easy it should've been.</p>
<p>My initial approach was to install the latest version of Windows 11, which I had installed as the operating system of this new PC, using a tool called Ventoy. Ventoy allows you to host multiple ISOs on a single flash drive for the purpose of installing an operating system.</p>
<p>The normal Windows 11 install process involves either creating or signing into a Microsoft account, which is fine for a personal rig, but is not great for a VM that might be leaking data. Since the whole point of the project is seeing what data Epic Games Store might be leaking <strong>without </strong>compromising security and privacy, this was a no-go.</p>
<p>The result was that I had to use a custom Windows 10 ISO from ReviOS/RevisionOS, which is a gaming/stability focused version of Windows 10. It focuses on debloating Windows and changing settings to prevent unwanted Windows configuration changes caused by updates, which is a frequent problem. In fact, I use ReviOS's Windows 11 distribution on my primary laptop.</p>
<p>However, this ISO was from late last year, because ReviOS switched to a new distribution method that didn't require the creation of an ISO. So it lacked numerous security patches... which meant the VM was a vulnerability. But given all the protections I already have on my network and PC, this was acceptable.</p>
<p>One problem down, more to come.</p>
<h2>Problem 2: VM IP Address Woes</h2>
<p>The plan for the project was to isolate Epic Games Store onto a VM, put that VM on the same Device Isolation network an old PC I own, and remotely access the VM from that PC.</p>
<p>This fell apart for several reasons:</p>
<ul>
<li>The TP-Link router software, which I have <strong>very </strong>little ability to configure, <strong>seems</strong> to detect devices based on MAC addresses.</li>
<li>Virtual Box and its documentation are very thorough, but aren't great for troubleshooting very specific problems.</li>
<li>Bing Copilot's response quality has been... inconsistent lately, so I couldn't rely on it to help me out of the problem.</li>
<li>Static assigned IP addresses don't work Device Isolation, because that's another process handled by the router software I have limited control over.</li>
</ul>
<p>The best I could do is to place the <strong>entire </strong>PC on the isolated devices list while running the VM, which I was considering... up until I encountered the next, most showstopping problem.</p>
<h2>Problem 3: Virtual Box Cannot Simulate DX11 GPUs</h2>
<p>Virtual Box's virtual GPU is best described as "anemic", bordering on completely unusable for anything besides generating visual output.</p>
<p>Thankfully, I didn't <strong>need </strong>it to do anything more than that, but it was annoying not being able to harness more of the RX 7900 XTX's power.</p>
<p>However, after going through the trouble of installing Epic Games Store <strong>and </strong>Unreal Engine 4.27, I discovered a critical issue.</p>
<p>Unreal Engine 4.27 requires DirectX (DX) 11 to function, and Virtual Box can only do up to DX9.</p>
<p>This means that the VM is utterly useless, aside from capturing the traffic generated by Epic Games Store. Which I could do, but couldn't export from the VM due to some sort of Virtual Box issue I don't understand.</p>
<p>This would be the end of the road, right?</p>
<figure class="post__video"><iframe loading="lazy" width="560" height="314" src="https://www.youtube-nocookie.com/embed/Iw1AghidekY" allowfullscreen="allowfullscreen" data-mce-fragment="1"></iframe></figure>
<h2>Project Pivot: Sandbox Epic Games Store</h2>
<p>After realizing that about 5 hours of work was for nothing, I did other things instead.</p>
<p>Having cleared my head, I considered other options.</p>
<p>The first, most obvious option was a containerized deployment of EGS. However, while I could find information about containerized versions of Unreal Engine 4, I didn't find anything about <strong>EGS</strong>, which is the primary data privacy threat.</p>
<p>Then I thought about a sandbox, particularly a free open source solution. Was there a program that had a strong feature set in active development?</p>
<p>The answer is <a href="https://github.com/sandboxie-plus/Sandboxie" target="_blank" rel="noopener noreferrer">Sandboxie-Plus.</a></p>
<p>This will be the environment I will operate Epic Games Store out of, once I learn how to properly configure the sandbox to prevent any data harvesting of the host system.</p>
            ]]>
        </content>
    </entry>
    <entry>
        <title>Cybersecurity Project Research: Remote Access</title>
        <author>
            <name>Xavier Santana</name>
        </author>
        <link href="https://korgano.github.io/cybersecurity-project-research-remote-access/"/>
        <id>https://korgano.github.io/cybersecurity-project-research-remote-access/</id>
        <media:content url="https://korgano.github.io/media/posts/10/glenn-carstens-peters-npxXWgQ33ZQ-unsplash.jpg" medium="image" />
            <category term="Tech"/>
            <category term="Quick Thoughts"/>
            <category term="PC"/>
            <category term="Cybersecurity Projects"/>

        <updated>2024-03-14T15:55:55-04:00</updated>
            <summary>
                <![CDATA[
                        <img src="https://korgano.github.io/media/posts/10/glenn-carstens-peters-npxXWgQ33ZQ-unsplash.jpg" alt="" />
                    For the next stage of my cybersecurity project, I need reliable remote access to the desktop computer where I'll be&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                    <p><img src="https://korgano.github.io/media/posts/10/glenn-carstens-peters-npxXWgQ33ZQ-unsplash.jpg" class="type:primaryImage" alt="" /></p>
                <p>For the next stage of my cybersecurity project, I need reliable remote access to the desktop computer where I'll be running a Windows VM containing Epic Games Store and Wireshark.</p>
<p>There are a great many programs that can serve this function, so I felt it prudent to do some research before potentially making a huge, time consuming mistake.</p>
<p>So I turned to Microsoft Copilot to start my search, due to its general functionality and the fact that it spits out a list of citations that I can use to check its results.</p>
<h2>Search #1: "best free remote desktop apps in terms of security"</h2>
<p>This search prompt got the following Copilot results:</p>
<p><code>Certainly! When it comes to **free remote desktop software**, security is a crucial factor. Let's explore some options that strike a balance between usability and safety:</code><br><br><code>1. **Chrome Remote Desktop**:</code><br><code>   - **Pros**:</code><br><code>     - **Free** and easy to set up.</code><br><code>     - Works well for **individuals** and professionals.</code><br><code>     - Operates within the **Google ecosystem**.</code><br><code>     - **Relatively safe** for host computers.</code><br><code>   - **Cons**:</code><br><code>     - **Minimal functionality**.</code><br><code>     - Limited to **Google Chrome**.</code><br><code>     - Lacks advanced features.</code><br><code>     - Cannot transfer files between devices.</code><br><code>     - Not suitable for large-scale businesses.</code><br><code>   - **How It Works**: Chrome Remote Desktop is a browser extension that allows you to remotely access any computer running the Chrome browser. It's compatible with macOS, Windows, and Android devices. Keep in mind that it's best suited for individual use or occasional access¹.</code><br><br><code>2. **Zoho Assist**:</code><br><code>   - **Pros**:</code><br><code>     - Part of the **Zoho ecosystem**.</code><br><code>     - Offers a variety of **advanced tools**.</code><br><code>     - Suitable for **IT teams** and professionals.</code><br><code>   - **Cons**:</code><br><code>     - Not entirely free (premium solutions available).</code><br><code>   - **How It Works**: Zoho Assist provides secure remote access and support. While it offers premium features, its free plan is still robust and reliable³.</code><br><br><code>3. **TeamViewer**:</code><br><code>   - **Pros**:</code><br><code>     - Completely **free for personal use**.</code><br><code>     - Widely trusted and reliable.</code><br><code>   - **Cons**:</code><br><code>     - Some users find it **resource-intensive**.</code><br><code>   - **How It Works**: TeamViewer allows remote access across different platforms. It's a solid choice for personal use, but be aware that it may prompt you to purchase a license for commercial purposes⁵.</code><br><br><code>Remember that while these tools offer convenience, always prioritize security by using strong passwords, enabling two-factor authentication, and keeping your software up to date. Choose the one that aligns best with your needs and ensures a safe connection for remote access! 🚀</code><br><br><code>Source: Conversation with Bing, 3/14/2024</code><br><code>(1) Best free remote desktop software of 2024 | TechRadar. https://www.techradar.com/best/best-free-remote-desktop-software.</code><br><code>(2) Best free remote desktop software 2024 - IT PRO. https://www.itpro.com/mobile/remote-access/368050/best-free-remote-desktop-software-2023.</code><br><code>(3) The Best Remote Access Software for 2024 | PCMag. https://www.pcmag.com/picks/the-best-remote-access-software.</code><br><code>(4) 20+ Free Remote Desktop Software Tools Choices - Heimdal Security. https://heimdalsecurity.com/blog/free-remote-desktop-software/.</code><br><code>(5) 5 Best FREE Remote Desktop Software in 2023 - DNSstuff. https://www.dnsstuff.com/free-remote-desktop-software.</code><br><code>(6) Getty. https://media.gettyimages.com/id/1244052182/photo/in-this-photo-illustration-the-zoho-corporation-logo-is-displayed-on-a-smartphone-screen.jpg?b=1&amp;s=612x612&amp;w=0&amp;k=20&amp;c=MKlc1NavyEJe-2FeZNGYgsSvWg7S_yE-0rnSNwIFUvM=.</code><br><code>(7) Getty. <a href="https://media.gettyimages.com/id/1170968197/photo/the-logo-of-german-tech-firm-teamviewer-stands-in-front-of-the-stock-exchange-in-frankfurt-am.jpg?b=1&amp;s=612x612&amp;w=0&amp;k=20&amp;c=bhJYbdUV-LwzowOkUzgXDAy8wayFoN-PR81jipozjfc=">https://media.gettyimages.com/id/1170968197/photo/the-logo-of-german-tech-firm-teamviewer-stands-in-front-of-the-stock-exchange-in-frankfurt-am.jpg?b=1&amp;s=612x612&amp;w=0&amp;k=20&amp;c=bhJYbdUV-LwzowOkUzgXDAy8wayFoN-PR81jipozjfc=</a>.</code></p>
<p>Bizarrely, this search resulted in two images being appended to the end of the results, presumably because of the earlier determination that Zoho and TeamViewer were some of the top results.</p>
<p>Going through the sources revealed that Copilot definitely did mix and match the results, although the reasons why it picked the sources it did are pretty obscure, aside from PCMag and TechRadar.</p>
<p>Heimdall Security in particular is eyebrow raising, given the quality of its work. If anything was an AI generated listicle, it was probably that.</p>
<p>Since I'm totally uninterested in using Chrome Remote Desktop for a variety of reasons, I decided to take a different tack.</p>
<h2>Search #2: Remote Desktop Apps from WinUtil</h2>
<p><a href="https://github.com/ChrisTitusTech/winutil" title="Chris Titus Tech's Windows Utility">Chris Titus' WinUtil</a> is an open-source PowerShell script that automates a variety of Windows configuration tasks. It also incorporates WinGet installation of a wide variety of free software, including remote desktop access applications.</p>
<p>Since this script includes Wireshark as an install option, it makes sense to use this when I get around to configuring my Windows VM. By default, Microsoft Remote Desktop is going to be my fallback option... assuming it's in the ISO I use.</p>
<p>To figure out which of the four options WinUtil offers is the most useful, I gave Copilot the following prompt:</p>
<p><code>Compare and contrast the following remote desktop applications:</code><br><code>Rust Remote Desktop</code><br><code>AnyDesk</code><br><code>Parsec</code><br><code>TeamViewer</code><br><br><code>Compare them on the following criteria:</code><br><code>-Ability to transfer files</code><br><code>-Ease of Use</code><br><code>-Hardware requirements</code><br><code>-Security</code></p>
<p>What I got was this:</p>
<p><code>Certainly! Let's compare and contrast the mentioned remote desktop applications—**Rust Remote Desktop**, **AnyDesk**, **Parsec**, and **TeamViewer**—based on the specified criteria:</code><br><br><code>1. **Ability to Transfer Files**:</code><br><code>   - **Rust Remote Desktop**:</code><br><code>     - Rust Remote Desktop is a relatively new open-source project, and its file transfer capabilities might be limited.</code><br><code>   - **AnyDesk**:</code><br><code>     - AnyDesk allows easy file transfer between connected devices.</code><br><code>     - You can drag and drop files directly during a remote session.</code><br><code>   - **Parsec**:</code><br><code>     - Parsec primarily focuses on low-latency game streaming and may not have robust file transfer features.</code><br><code>   - **TeamViewer**:</code><br><code>     - TeamViewer offers efficient file transfer functionality.</code><br><code>     - You can share files seamlessly during remote sessions.</code><br><br><code>2. **Ease of Use**:</code><br><code>   - **Rust Remote Desktop**:</code><br><code>     - Being open-source, Rust Remote Desktop may have a learning curve for setup and configuration.</code><br><code>   - **AnyDesk**:</code><br><code>     - AnyDesk provides a straightforward and user-friendly interface.</code><br><code>     - It's easy to install and use, making it suitable for both beginners and experienced users.</code><br><code>   - **Parsec**:</code><br><code>     - Parsec is designed for gaming, but its simplicity extends to general remote access.</code><br><code>     - The setup process is straightforward.</code><br><code>   - **TeamViewer**:</code><br><code>     - TeamViewer has a polished interface and is widely recognized.</code><br><code>     - It's user-friendly and suitable for various scenarios.</code><br><br><code>3. **Hardware Requirements**:</code><br><code>   - **Rust Remote Desktop**:</code><br><code>     - As an open-source solution, Rust Remote Desktop should run on most systems.</code><br><code>     - However, specific hardware requirements may vary based on the underlying Rust libraries.</code><br><code>   - **AnyDesk**:</code><br><code>     - AnyDesk is lightweight and works well even on older hardware.</code><br><code>     - It doesn't demand high system resources.</code><br><code>   - **Parsec**:</code><br><code>     - Parsec is optimized for low-latency streaming, which requires decent hardware.</code><br><code>     - For smooth performance, a capable GPU is recommended.</code><br><code>   - **TeamViewer**:</code><br><code>     - TeamViewer runs on a wide range of devices, including mobile platforms.</code><br><code>     - It adapts well to different hardware configurations.</code><br><br><code>4. **Security**:</code><br><code>   - **Rust Remote Desktop**:</code><br><code>     - Security depends on the implementation and community support.</code><br><code>     - Being open-source, it allows transparency and community scrutiny.</code><br><code>   - **AnyDesk**:</code><br><code>     - AnyDesk uses strong encryption protocols (TLS 1.2) for secure connections.</code><br><code>     - It provides session codes and access permissions.</code><br><code>   - **Parsec**:</code><br><code>     - Parsec emphasizes low latency over security.</code><br><code>     - While it encrypts data, it may not be as robust as other options.</code><br><code>   - **TeamViewer**:</code><br><code>     - TeamViewer has a solid security track record.</code><br><code>     - It uses end-to-end encryption and offers features like two-factor authentication.</code><br><br><code>In summary:</code><br><code>- **AnyDesk** is user-friendly and efficient for file transfer.</code><br><code>- **TeamViewer** is well-established, secure, and versatile.</code><br><code>- **Parsec** is ideal for low-latency gaming but may lack extensive file transfer features.</code><br><code>- **Rust Remote Desktop** is open-source and promising, but its capabilities are still evolving.</code><br><br><code>Choose the one that aligns best with your specific needs and preferences! 🌟</code><br><br><code>Source: Conversation with Bing, 3/14/2024</code><br><code>(1) Teamviewer VS Anydesk - Which is Better Remote Desktop Software?. https://www.youtube.com/watch?v=L4ldNqdKFLM.</code><br><code>(2) AnyDesk vs TeamViewer: What's the difference? (Updated). https://www.youtube.com/watch?v=vnBA1fdZRxs.</code><br><code>(3) AnyDesk vs TeamViewer | Remote Desktop Comparison in 2022. https://www.youtube.com/watch?v=IwlSfec5H7Y.</code><br><code>(4) Let's advise each other on the most efficient remote PC access ... - Reddit. https://www.reddit.com/r/software/comments/ts9b79/lets_advise_each_other_on_the_most_efficient/.</code><br><code>(5) RustDesk Alternatives: 25+ Remote Desktop Tools &amp; Similar Apps .... https://alternativeto.net/software/rustdesk/.</code><br><code>(6) AnyDesk vs. Parsec vs. TeamViewer Comparison - SourceForge. https://sourceforge.net/software/compare/AnyDesk-vs-Parsec-vs-TeamViewer/.</code><br><code>(7) Compare AnyDesk vs. Parsec vs. TeamViewer in 2024 - Slashdot. https://slashdot.org/software/comparison/AnyDesk-vs-Parsec-vs-TeamViewer/.</code><br><code>(8) undefined. https://i.imgur.com/FPxAM2w.png.</code><br><code>(9) undefined. https://sourceforge.net/projects/tigervnc/files/.</code><br><code>(10) undefined. https://play.google.com/store/apps/details?id=com.google.chromeremotedesktop&amp;hl=en_US--.</code><br><code>(11) undefined. <a href="https://parsec.app/downloads--">https://parsec.app/downloads--</a>.</code></p>
<p>In a confusing turn, a random image was among the search results.</p>
<p>Without even getting into the sources, it's telling that the clear trend is that AnyDesk and TeamViewer are the best options, at least for my intended use case. </p>
<p>Looking further into TeamViewer, Slashdot's link is actually a very good side-by-side comparison of the two pieces of software. In terms of functionality, <strong>on paper</strong>, TeamViewer looks like the obvious choice.</p>
<p>Unfortunately, I discovered that TeamViewer has some really awful business practices:</p>
<figure class="post__video"><iframe loading="lazy" width="560" height="314" src="https://www.youtube-nocookie.com/embed/zbrPQsMK2gU" allowfullscreen="allowfullscreen" data-mce-fragment="1"></iframe></figure>
<p>For those who didn't watch, TeamViewer requires you to submit a ticket for cancellation <strong>28 days </strong><strong>in advance</strong>, and if you fail to do so, it will charge you for a <strong>year's subscription</strong>. This is obviously more of an issue for business customers, but the mindset is <strong>highly </strong>concerning.</p>
<p>This led me to do one final thing before coming to a decision.</p>
<h2>The Ultimate Showdown: First Boot of TeamViewer and AnyViewer</h2>
<p>Using Chris Titus' WinUtil, I installed both programs and opened them.</p>
<p>TeamViewer requires an account to use. This means that even if my devices are on the same subnet, some amount of data is being sent out to external servers. That traffic is utterly unnecessary for the execution of the task, and is an extra potential vulnerability and source of traffic that'll make my analysis of Epic Games Store's traffic that much more difficult.</p>
<p>AnyDesk does not require any account, and on startup, just displays a large number that's used for connecting PCs running the AnyDesk client. Minimal, usable, and absolutely what I need to get the job done.</p>
<p>Also, for some reason. the purported file size of TeamVIewer is 200MB, while AnyDesk is supposedly 2MB.</p>
<p>For all these reasons, I will be using AnyDesk for this project.</p>
<h2>The Next Steps</h2>
<p>For the next stage of the project, I'll be doing the following:</p>
<ul>
<li>Familiarizing myself with AnyDesk's best practices for setting up secure connections between systems.</li>
<li>Assembling the system that'll be running the VM running AnyDesk.</li>
<li>Determining if the VM can be treated as an isolated device by the router.</li>
</ul>
<p>The most crucial factor in this project's success is getting router DHCP to properly assign an address to the VM. Without that, Epic Games Store becomes a potential vulnerability on my network, which is <strong>not </strong>the intended goal.</p>
            ]]>
        </content>
    </entry>
    <entry>
        <title>Cybersecurity Headache: Home Router UXUI</title>
        <author>
            <name>Xavier Santana</name>
        </author>
        <link href="https://korgano.github.io/cybersecurity-headache-home-router-uxui/"/>
        <id>https://korgano.github.io/cybersecurity-headache-home-router-uxui/</id>
        <media:content url="https://korgano.github.io/media/posts/9/andres-urena-vXPXRp_wIg4-unsplash.jpg" medium="image" />
            <category term="UX/UI"/>
            <category term="Quick Thoughts"/>
            <category term="PC"/>
            <category term="Cybersecurity Projects"/>

        <updated>2024-03-05T08:39:32-05:00</updated>
            <summary>
                <![CDATA[
                        <img src="https://korgano.github.io/media/posts/9/andres-urena-vXPXRp_wIg4-unsplash.jpg" alt="" />
                    As an aspiring cybersecurity professional, there's all sorts of projects that I could undertake. Maintaining my Pi-Hole DNS black hole&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                    <p><img src="https://korgano.github.io/media/posts/9/andres-urena-vXPXRp_wIg4-unsplash.jpg" class="type:primaryImage" alt="" /></p>
                <p>As an aspiring cybersecurity professional, there's all sorts of projects that I could undertake. Maintaining my Pi-Hole DNS black hole is one of those. Personally, I like projects where I'm doing something that has practical benefit to me.</p>
<p>So when I came into some pretty powerful PC hardware, I saw an opportunity.</p>
<p>What I wanted to do:</p>
<ul>
<li>Build a system with a Ryzen 7800X3D CPU and RX 7900 XTX GPU</li>
<li>Set up a Windows VM on the 7800X3D/7900 XTX system</li>
<li>Place the Windows VM on a subnet</li>
<li>Install Epic Games Store on the Windows VM</li>
<li>Use Wireshark to track what traffic EGS produces</li>
<li>Place an old PC on the same subnet</li>
<li>Remotely operate the VM through the old PC</li>
</ul>
<p>What could go wrong?</p>
<h2>Problem #1 - Can I Even Subnet?</h2>
<p>My network uses TP-Link routers... which means I have to use an app to access an online account to set my router settings.</p>
<p>This is suboptimal from a security perspective for many reasons. Perhaps the biggest one is that you need internet access to set up a LAN.</p>
<p>But setting that aside, there's one major problem - there's no way to actually set up subnets and VLANs. What you do get? IoT Network and Device Isolation options.</p>
<p>What you get with these options are the ability to create a "dedicated wireless network to manage your IoT devices together", or "Isolate devices to protect your network from security threats." </p>
<p>Device isolation seemed to be the right pick, so I set a static IP on the old PC and added it to the Device Isolation list.</p>
<h2>Problem #2 - Can't Connect to the Internet</h2>
<p>After configuring things, I immediately tested the network connection on the old PC. My first step was opening the browser and checking the default home page links. When this failed, I tried to ping the DNS server... which also failed.</p>
<p>At the same time, the PC was having weird connectivity issues while in isolation mode, with the WiFi dropping periodically.</p>
<p>To troubleshoot this, I did several things:</p>
<ul>
<li>Checked to see if find any data in the TP-Link app about what settings Device Isolation uses.
<ul>
<li>There wasn't any data, which is a big <strong>YIKES</strong>.</li>
</ul>
</li>
<li>Disabled the Device Isolation, checked the ipconfig, re-enabled Device Isolation, and checked ipconfig again.
<ul>
<li>Since I had static IP on the old PC, this didn't do anything. More on that later.</li>
</ul>
</li>
<li>I tried to setup up static routing.
<ul>
<li>This apparently applied to the <strong>entire </strong>network, and when I undid it, I had to reset the router to get any connectivity to the network. Fun!</li>
</ul>
</li>
</ul>
<p>This experimentation was all necessary because of the following problem:</p>
<h2>Problem #3 - Insufficient Documentation</h2>
<figure class="post__image"><img loading="lazy"  src="https://static-community.tp-link.com/other/25/7/2023/c4ab7cbd7ed54858b68cd8e1999c5cdf.png" alt="Screencaps of TP-Link Device Isolation Control Panels from TP-Link's Device Isolation page" width="1922" height="1136" data-is-external-image="true"></figure>
<p>The reason I had so many problems is because, as you can see above, the UI doesn't provide a lot of details.</p>
<p>This might be forgivable if the website was full of detailed documentation. <a href="https://community.tp-link.com/us/home/kb/detail/412694" title="Using Device Isolation on Deco" target="_blank" rel="noopener noreferrer"><strong>THIS </strong>is what they give you</a> - a pretty good explanation of how it works and how to set up Device Isolation. It does <strong>not </strong>tell you anything about how to troubleshoot issues, and the forums are not helpful either.</p>
<p>One of the big problems with cybersecurity is that building the mindset to be a good practioner is a lot easier when you do it all the time. And that includes the home environment.</p>
<p>The biggest hurdle to that process is that doing cybersecurity properly requires the ability to troubleshoot and fix problems. And if you're not experienced or working with an unfamiliar system, troubleshooting tends to require documentation to explain what to do and what to look for. So the absence of said documentation has a <strong>massive </strong>negative impact.</p>
<p>Especially when the TP-Link app actually has an entire suite of useful testing/security tools:</p>
<ul>
<li>Speed Test</li>
<li>Detect Cameras</li>
<li>Scan For Devices</li>
<li>Ping Test</li>
<li>Public IP Lookup</li>
<li>MAC Lookup</li>
<li>Open Port Checker</li>
<li>Wi-Fi Interference</li>
</ul>
<p>None of these were useful for diagnosing the problems, for reasons I will explain below.</p>
<h2>Solving the Problem</h2>
<p>Because I <strong>did </strong>have experience with troubleshooting, I eventually figured out the problem.</p>
<p>So what was the solution?</p>
<ol>
<li>Remove the static IP address assignment for the old PC.</li>
<li>Connect the device to a network extension instead of directly to the router, solving the connection issues.</li>
<li>Activate device isolation.</li>
<li>Check the ipconfig.</li>
<li>Check to see if webpages load.</li>
</ol>
<p>This worked, but I discovered something odd. When I checked the device list in the TP-Link app, the device IP address was this:</p>
<pre class="language-json line-numbers"><code>###.###.##.55</code></pre>
<p>When I checked the results of ipconfig on the system, the result was this:</p>
<pre class="language-json line-numbers"><code>IPv4 Address: ###.###.##.100 (Preferred)</code></pre>
<p>From what I can tell, it seems as though the router assigns IPv4 addresses starting from 100 to isolated devices, but I cannot confirm this until I try to isolate the VM.</p>
<p>Curiously, there's no actual way to check what the Device Isolation IPs are in the app, and the old PC entry on the device list disappeared after closing and reopening the app.</p>
<p>Checking PiHole for DNS queries from the old PC did yield results, so that confirmed that there was proper routing and filtering.</p>
<p>Thankfully, the problem had a simple solution, but that still took a few hours of research and iteration. </p>
<h2>What TP-Link Can Do</h2>
<p>There's a few things that can be done about this:</p>
<ol>
<li>Include IP addresses on Device Isolation device cards.</li>
<li>Have a Device Isolation troubleshooting page/section that informs users to <strong>not </strong>try to reserve IP addresses to isolated devices.</li>
<li>Have an HTTP control panel that allows for detailed control, like older/Netgear routers.</li>
</ol>
<p>Should they do these things? If they care about the user's cybersecurity, then the answer is yes. Will they do it?</p>
<p>Two of these items are definitely going to be budget and effort sinks, which means that they're unlikely to happen without a <strong>lot </strong>of motivation to do so.</p>
<p>But it's genuinely confusing that the app's information on isolated devices doesn't include the assigned IP. This is a fairly simple bit of data to expose to the user, and definitely necessary for troubleshooting.</p>
<p>That said, TP-Link continues development of their firmware and app, so perhaps they will address these issues in the near future. One can only hope, because making cybersecurity as easy as possible is a great thing for everyone.</p>
            ]]>
        </content>
    </entry>
    <entry>
        <title>Minimizing the CyberSecurity Headaches of Video Game Modding</title>
        <author>
            <name>Xavier Santana</name>
        </author>
        <link href="https://korgano.github.io/cybersecurity-and-video-game-modding/"/>
        <id>https://korgano.github.io/cybersecurity-and-video-game-modding/</id>
        <media:content url="https://korgano.github.io/media/posts/8/fotis-fotopoulos-DuHKoV44prg-unsplash.jpg" medium="image" />
            <category term="Video Games"/>
            <category term="Tech"/>
            <category term="Quick Thoughts"/>
            <category term="Cybersecurity"/>

        <updated>2023-12-05T13:56:13-05:00</updated>
            <summary>
                <![CDATA[
                        <img src="https://korgano.github.io/media/posts/8/fotis-fotopoulos-DuHKoV44prg-unsplash.jpg" alt="RGB keyboard with dual monitors in background with Visual Studio Code windows open." />
                    As the year draws to a close, it's time to reflect on a lot of things. Some of them are&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                    <p><img src="https://korgano.github.io/media/posts/8/fotis-fotopoulos-DuHKoV44prg-unsplash.jpg" class="type:primaryImage" alt="RGB keyboard with dual monitors in background with Visual Studio Code windows open." /></p>
                <p>As the year draws to a close, it's time to reflect on a lot of things. Some of them are obvious, others are not.</p>
<p>For example, video game modding isn't really an attack vector most people would think of. But if you dig below the surface, there's a lot to unpack.</p>
<p>First of all, there's several different types of game modding, which can overlap:</p>
<ol>
<li>Exposed file changes - alterations to easily accessible files, typically configuration files.</li>
<li>Altering variables at runtime - using external tools to change hex values that control in-game statistics and functions.</li>
<li>Altering compressed archives - unpacking the contents of compressed archives, editing the contents, then repacking the contents to alter game behavior.</li>
<li>Creating and inserting new content - requires various formats, tools, and possible code alterations to accomplish.</li>
</ol>
<p>So, what are the cybersecurity implications? Let's break them down by who is doing what.</p>
<h4><strong>Players</strong></h4>
<ul>
<li>Least amount of control.</li>
<li>Desires some change to game experience from mods.</li>
<li>Depend on 3rd parties (mod developers) to make mods/software and provide support.</li>
<li>Rely on hosting websites and antivirus/firewalls on personal computers/devices for security.</li>
<li>Unlikely to have tools capable of detecting potential vulnerabilities caused by improper programming.</li>
</ul>
<p>Basically, players are end users who are placing a <strong>lot </strong>of faith in the mod makers to A) not intentionally place malware in their systems, B) accidentally make malware infected mods, or C) accidentally compromise/damage their systems due to unexpected software interactions. The amount of risk is dependent on the type of mod, with exposed file changes like alterations to configuration files being the lowest risk.</p>
<p>Also exacerbating risk are proprietary file/archive formats that don't allow the user or antivirus software to properly asses the mod's contents. This is a more frequent problem with popular engines such as Unreal and Unity.</p>
<figure class="post__video"><iframe loading="lazy" width="560" height="314" src="https://www.youtube-nocookie.com/embed/Kyo8dvuIK00" allowfullscreen="allowfullscreen" data-mce-fragment="1"></iframe></figure>
<h4>Mod Developers</h4>
<ul>
<li>Variable amount of control.</li>
<li>Variable amount of personnel.</li>
<li>Variable amount of programming experience.</li>
<li>Variable amount of troubleshooting experience.</li>
<li>Desires to change some aspect of game experience.</li>
<li>Dependent on 3rd party tools or self-developed tool solutions.</li>
<li>Rely on hosting websites and antivirus/firewalls on personal computers/devices for security.</li>
<li>Variable likelihood to have tools capable of detecting potential vulnerabilities caused by improper programming.</li>
</ul>
<p>Theoretically, mod developers <strong>should </strong>be the people responsible for handling all the cybersecurity implications of modding games.</p>
<p>The problem is that until AI driven programming/modding tools that incorporate code assessment and hardening measures become standard, there's no way for modders to realistically do so.</p>
<p>Why? Well, the answer is very simple. The vast majority of modders are hobbyists. They tend to only learn enough to accomplish the task(s) they want to do, and generally cannot make their own tools. They are therefore dependent on officially provided tools and documentation, which games rarely provide these days, old third party tools, or community sourced tools... which they don't have the technical knowledge or skill to vet the coding of.</p>
<p>For anything short of a developer made Visual Studio/VS Studio extension or tool, there's a huge leap of faith required by the potential modder - namely, that the tools aren't rife with malware.</p>
<p>And then there are issues of coding compatibility with the game itself and other mods. Modders with the knowledge and skills are likely to work on the low hanging fruit of potential exploits, like memory leaks. But <strong>no one </strong>is going to be doing comprehensive testing for potential vulnerabilities. Between lack of time, knowledge, experience, and automation to run modded games until a crash happens, there's simply too many hurdles for any single individual modder to overcome.</p>
<h4>Game Developers</h4>
<ul>
<li>Most amount of control.</li>
<li>Variable amount of personnel.</li>
<li>Generally high amount of programming experience.</li>
<li>Generally high amount of troubleshooting experience.</li>
<li>Near total control of game experience and coding.</li>
<li>Dependent on 3rd party tools or self-developed tool solutions.</li>
<li>Typically have business grade security.</li>
<li>Variable likelihood to have tools capable of detecting potential vulnerabilities caused by improper programming.</li>
</ul>
<p>In reality, the people most responsible for cybersecurity in video games are the developers and, if applicable, network game service providers.</p>
<p>This is pretty much due to probabilities. The game developer and whoever they partner with to provide online capabilities (multiplayer, content updates, etc...) are the most likely to have the proper tools to test for and fix potential vulnerabilities.</p>
<p>Even if a developer supplied the source code for the game as part of a mod Software Development Kit (SDK), that likely won't include the ability to update <em>the engine</em>, which is third party software that runs all the game code. If there's a vulnerability in the engine, the patch fixing that vulnerability might actually be in a file that the mod SDK <em>does not </em>allow modders to compile, and can only be distributed by the developers.</p>
<p>That being said, when it comes to security, game developers are generally focused on multiplayer modes and other network connected features. And for good reason. Manipulation of data in those modes not only affects the general player experience (cheaters being able to see through walls, for example), it can also be weaponized. Games like Dark Souls 3 have had malicious actors dump modified items into other player's games using the network features, causing their victims to be banned from playing with non-cheaters.</p>
<p>It is only in the circumstance where the game is <strong>intended </strong>to be modified that developers think of the implications of the game being modified.</p>
<h4>Mitigation</h4>
<p>There are two main ways to mitigate potential cybersecurity vulnerabilities created by modifying games:</p>
<ul>
<li>Provide official modding support through tools and documentation.</li>
<li>Provide a non-modding solution to game customization.</li>
</ul>
<p>The first is a rather time and resource consuming effort, but depending on the game genre and perceived value of building a sustained player base, can be worth it. For example, XCOM 2, a 2016 strategy game title, has a robust player base 7 years later, <strong>because </strong>it has a massive amount of mod content. This content was created through the use of developer provided tools and seed knowledge, which provided the basis for a modding community that is still active to this day.</p>
<p>This allows for known methods of data input to be sanitized and hardened, and depending on how the source code licensing is handled, permits auditing via open source public hosting.</p>
<p>Non-modding solutions to game customization actually has two major subsets:</p>
<ol>
<li>User modifiable configuration files.</li>
<li>In-game customization menus.</li>
</ol>
<p>The first option might be confusing to non-gamers, especially non-PC gamers. Aren't user editable files a form of mod support?</p>
<p>Technically, yes, but in general, they exist mostly a standard fail-safe for boot-time troubleshooting and configuration of a game. If you can't get a game to boot at a desired resolution and language, editing the configuration files gives you a chance to force the game to do what you want.</p>
<figure class="post__video"><iframe loading="lazy" width="560" height="314" src="https://www.youtube-nocookie.com/embed/Bd-iKS_4ezk?t=53" allowfullscreen="allowfullscreen" data-mce-fragment="1"></iframe></figure>
<p>The other option, which is growing to be more popular, is having an in-game menu to customize settings. This is basically a user friendly method of what the configuration file does - let players change numbers and other operations that affect gameplay.</p>
<p>As it so happens, this is <strong>precisely </strong>what the majority of gamers (75+%) would like. For a variety of reasons, what tends to make an experience less enjoyable to a gamer is the developer's choice for the settings. Typically, things will be too hard, too easy, or take too long, and/or some other kind of inconvenient for an individual player. </p>
<p>The advantage of these approaches is that they reduce the number of possible inputs to sanitize, <strong>while </strong>also fulfilling the demands of the largest number of users. It won't satisfy the people who want to change how things work or add new content, of course. But helping cut down the threat surface for bad actors to exploit more than makes up for.</p>
<p>Will developers implement these methods as standards in the future? If tool sets make it fast and easy, perhaps they will.</p>
            ]]>
        </content>
    </entry>
    <entry>
        <title>User Experience Report: Mars Tactics Demo (Steam NextFest 2023)</title>
        <author>
            <name>Xavier Santana</name>
        </author>
        <link href="https://korgano.github.io/ux-report-mars-tactics-demo-oct-2023/"/>
        <id>https://korgano.github.io/ux-report-mars-tactics-demo-oct-2023/</id>
        <media:content url="https://korgano.github.io/media/posts/6/20231013082123_1.jpg" medium="image" />
            <category term="Video Games"/>
            <category term="UX/UI"/>
            <category term="UX"/>
            <category term="Quick Thoughts"/>

        <updated>2023-10-10T15:05:43-04:00</updated>
            <summary>
                <![CDATA[
                        <img src="https://korgano.github.io/media/posts/6/20231013082123_1.jpg" alt="Mars Tactics Demo Start Sceen" />
                    Editor's Note: The body of this post was written prior to demo patch 0.2.27, which changed certain gameplay and UX/UI functionality.
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                    <p><img src="https://korgano.github.io/media/posts/6/20231013082123_1.jpg" class="type:primaryImage" alt="Mars Tactics Demo Start Sceen" /></p>
                <figure><strong>Editor's Note: </strong>The body of this post was written prior to <a href="https://steamcommunity.com/app/1727760/discussions/0/7257046178088222946/" title="Mars Tactics - New patch deployed: 0.2.27" target="_blank" rel="noopener noreferrer">demo patch 0.2.27</a>, which changed certain gameplay and UX/UI functionality.</figure>
<figure class="post__video"><iframe loading="lazy" width="560" height="314" src="https://www.youtube-nocookie.com/embed/SIs138qkotU" allowfullscreen="allowfullscreen" data-mce-fragment="1"></iframe></figure>
<p>Turn-based strategy/tactics games are some of the most interesting from a user experience point of view, because of how much they depend on the player's interactions with the user interface.</p>
<p>How long it takes to execute a task with a unit, whether that's actions (mouse movement, clicks, etc...) or time, multiplied by the number of units, determines the length of each turn. And as turn length increases, the longer a mission lasts, which increases the chances of wearing out the user.</p>
<p>But this isn't the only thing that affects the user experience. There's also the choices the developers make, and what might seem fine when tested by people who know how things are <strong>intended </strong>to work, might not be good when experienced by outsiders.</p>
<p>Mars Tactics might be one of those games.</p>
<p>The premise of Mars Tactics is pretty simple: We've colonized Mars, and corporate mismanagement/war crimes has led to an armed workers revolt. Players can control Corporate or Labor forces in tactical missions to achieve objectives that further strategic gameplay, such as recruiting new soldiers or obtaining new resources.</p>
<p>So, let's dive into the UX of the (at present) most recent Mars Tactics demo.</p>
<div class="post__toc">
<h3>Table of Contents</h3>
<ul>
<li><a href="#mcetoc_1hciv6c9q187">Suppression's Still Good</a></li>
<li><a href="#mcetoc_1hciv6c9q188">The Dark Side of Suppression</a></li>
<li><a href="#mcetoc_1hciv6c9q189">Physics Gives...</a></li>
<li><a href="#mcetoc_1hciv6c9q18a">Physics Takes Away</a></li>
<li><a href="#mcetoc_1hciv6c9q18b">The AI Doesn't Have Handicaps</a></li>
<li><a href="#mcetoc_1hciv6c9q18c">Rescuing Prisoners Breaks the UI</a></li>
<li><a href="#mcetoc_1hciv6c9q18d">There's a Reason You Shouldn't Have 8+ Controllable Units</a></li>
<li><a href="#mcetoc_1hciv6c9q18e">The Evac Requirements are Insane</a></li>
</ul>
</div>
<h3 id="mcetoc_1hciv6c9q187">Suppression's Still Good</h3>
<p>Perhaps the single biggest mechanical innovation of Mars Tactics over the Firaxis XCOM games, which are the gold standard of comparison, is the suppression mechanic implementation.</p>
<p>In XCOM and several games it inspired, suppression is a dedicated ability that allows a unit to shoot at an enemy without hitting it, while reducing the enemy's aim (and possibly other abilities) by some amount. It's generally used when the player needs to capture an enemy alive, or when there's a low hit probability for a lethal attack, but you need to weaken a specific enemy somehow.</p>
<p>In Mars Tactics, suppression is not an ability. Instead, suppression is based on a meter associated with each unit. Each time you fire a gun at a unit, <strong>even if it does not hit</strong>, adds to this meter. Once this meter is filled, the unit is suppressed, which prevents it from attacking or moving. Suppression generally ends when the next turn starts, with the meter slowly depleting over the course of the next turns, allowing for multiple suppressions in a row.</p>
<p>The amount of suppression per attack is determined by the type of weapon. Fully automatic weapons have a higher chance to suppress, for example. Flashbang grenades also max out the suppression meter immediately.</p>
<figure class="post__video"><iframe loading="lazy" width="560" height="314" src="https://www.youtube-nocookie.com/embed/sUOsBL8ISPY" allowfullscreen="allowfullscreen" data-mce-fragment="1"></iframe></figure>
<p>Even better, you can have it apply when you just spray bullets in an arc!</p>
<h3 id="mcetoc_1hciv6c9q188">The Dark Side of Suppression</h3>
<p>Unfortunately, there's a number of design decisions that make this novel mechanic a detriment to the user experience.</p>
<p>The first is an unusual one - tying grenade effectiveness to suppression. To put it bluntly, unless you either exploit the game's physics (more on that later), using <strong>any </strong>grenade besides a flashbang or smoke grenade is useless. Units on both sides auto-scamper away (more on that later too), which means that tossing a grenade will usually result in <strong>zero </strong>damage to the enemy and one less grenade that you might be able to use later.</p>
<p>Now, this might not be a problem if/when the player has a Light Machinegun, which the demo's menu tells you about. A weapon with decent range and a high suppression factor would make grenades very usable. But when your squad of units <strong>does not </strong>have such a weapon, there are only two ways to make grenades effective:</p>
<ol>
<li>Toss a smoke/flashbang grenade at the enemies, <strong>then </strong>toss an explosive grenade at them.</li>
<li>Exploit the game's physics to get the grenade close enough to kill them without triggering the auto-scamper.</li>
</ol>
<p>And then there's how suppression ties into initiative, but first, let's look at something more positive.</p>
<h3 id="mcetoc_1hciv6c9q189">Physics Gives...</h3>
<p>There's some fun things you can do with the physics in Mars Tactics, which do produce positive UX for the player:</p>
<figure class="post__video"><iframe loading="lazy" width="560" height="314" src="https://www.youtube-nocookie.com/embed/z7wGuDD2rrE" allowfullscreen="allowfullscreen" data-mce-fragment="1"></iframe></figure>
<figure class="post__video"><iframe loading="lazy" width="560" height="314" src="https://www.youtube-nocookie.com/embed/r4WFfoVLR7M" allowfullscreen="allowfullscreen" data-mce-fragment="1"></iframe></figure>
<p>It's difficult to put into words how <strong>satisfying </strong>these kinds of interactions are. Perhaps the best analogy would be the game Baldur's Gate 3, where much of the game's appeal comes from the developers giving a wide variety of ways to accomplish any task.</p>
<p>Being able to do just about anything and discover that it's a viable solution is a standout feature in an age when games are getting more restrictive with what you can do. But it's not all sunshine and roses...</p>
<h3 id="mcetoc_1hciv6c9q18a">Physics Takes Away</h3>
<p>So let's look at that second grenade video again:</p>
<figure class="post__video"><iframe loading="lazy" width="560" height="314" src="https://www.youtube-nocookie.com/embed/r4WFfoVLR7M" allowfullscreen="allowfullscreen" data-mce-fragment="1"></iframe></figure>
<p>You might be wondering how I knew the grenade would roll like that on top of the rock.</p>
<p>I didn't.</p>
<p>I just took a chance, lobbed it over there, and got super lucky it rolled. Even with the grenade tooltip telling me that grenades can bounce (and roll, apparently), I had no way of knowing this outcome was possible. And in a tactical/strategy game, that's not great.</p>
<figure class="post__video"><iframe loading="lazy" width="560" height="314" src="https://www.youtube-nocookie.com/embed/jVfHGllck3s" allowfullscreen="allowfullscreen" data-mce-fragment="1"></iframe></figure>
<p>One of big problems with Mars Tactics is that the focus on physics interactions makes gameplay unpredictable. For example, the clip above is one of <strong>several </strong>times where I wasted ammunition shooting into a wall or physical object in the line of fire. This made even worse by the fact that you have to <strong>manually </strong>maneuver around your units own cover by holding Left CRTL, which makes things even more awkward.</p>
<figure class="post__video"><iframe loading="lazy" width="560" height="314" src="https://www.youtube-nocookie.com/embed/OBUsTGWvyuc" allowfullscreen="allowfullscreen" data-mce-fragment="1"></iframe></figure>
<p>Oh, and the game physics means that you can kill your own guys while trying shoot around them, which is not great.</p>
<figure class="post__video"><iframe loading="lazy" width="560" height="314" src="https://www.youtube-nocookie.com/embed/4vtdykH7aRo" allowfullscreen="allowfullscreen" data-mce-fragment="1"></iframe></figure>
<p>Also, smoke grenades can somehow cause explosions that kill people, even though they are not actually explosives and don't explode in real life.</p>
<p>A lot of what makes strategy/tactics games fun is figuring how to respond to certain scenarios/challenges presented by the game. Mars Tactics' combination of physics and unit control micromanagement/precision basically makes that impossible for anyone playing the demo. Everything is just too chaotic and variable to learn from.</p>
<p>But wait, it gets worse!</p>
<h3 id="mcetoc_1hciv6c9q18b">The AI Doesn't Have Handicaps</h3>
<p>In most video games, including the Firaxis XCOM games, the AI is given massive handicaps so that players don't get curbstomped immediately.</p>
<p>Mars Tactics' demos <strong>do NOT </strong>do this.</p>
<figure class="post__video"><iframe loading="lazy" width="560" height="314" src="https://www.youtube-nocookie.com/embed/4vtdykH7aRo" allowfullscreen="allowfullscreen" data-mce-fragment="1"></iframe></figure>
<p>The fundamental problem with Mars Tactics is multilayered:</p>
<ol>
<li>The AI perfectly understands how things are intended to work, while the player may not.</li>
<li>The AI doesn't care about conserving items for use later, like the player does.</li>
<li>The AI doesn't have barriers to execution in the form of manually maneuvering around objects.</li>
<li>The AI units are generally on the defensive in the demo missions, giving them stronger starting tactical positions.</li>
</ol>
<figure class="post__video"><iframe loading="lazy" width="560" height="314" src="https://www.youtube-nocookie.com/embed/N4jFu7GC15E" allowfullscreen="allowfullscreen" data-mce-fragment="1"></iframe></figure>
<p>What this results in is a miserable user experience, as the player encounters a near vertical difficulty curve. It is basically impossible to be as effective as the AI controlled enemy units <strong>without </strong>taking 50/50 chances on exploiting the game physics.</p>
<p>I <strong>literally </strong>only managed to achieve the objective of the mission because I managed to do those two distance grenade kills. Those weren't feats of skill or execution - they were pure <strong>luck </strong>that I had units with explosives and put them in the right spots to get those kills.</p>
<p>Unsurprisingly, a lot of feedback on the current demo is negative, indicating to me that a lot of people were <strong>not </strong>lucky, and found themselves overwhelmed by the enemy AI's mastery of the game systems.</p>
<h3 id="mcetoc_1hciv6c9q18c">Rescuing Prisoners Breaks the UI</h3>
<figure class="post__video"><iframe loading="lazy" width="560" height="314" src="https://www.youtube-nocookie.com/embed/8eiG3atGNvg" allowfullscreen="allowfullscreen" data-mce-fragment="1"></iframe></figure>
<p>Mars Tactics has a number of UI issues. One of them is that the unit info card above the units on the game map has really limited scaling. This is a problem, because playing this game at anything less than fully zoomed out (which isn't a setting in the menu yet) makes situational awareness impossible.</p>
<p>Having individual cards on the left side of the screen is a more subjective issue. It seems to be a popular trend for newer turn-based tactics/strategy games, but I find it clutters the screen. It'd be interesting to see some UX research into whether that provides value for people.</p>
<p>However, what is indisputable is that there's an upper limit on how many cards you should have, and it's <strong>way </strong>less than the total number of prisoners you could liberate in the mission. (I am genuinely unsure if this was a bug or a deliberate option for the demo.)</p>
<p>As seen above, I wound up liberating several dozen groups of four prisoners, which filled the left side of my screen with a non-scrolling list of character info cards. This made it borderline impossible to select specific units without actually hovering over them and mouse clicking on them.</p>
<h3 id="mcetoc_1hciv6c9q18d">8+ Controllable Units is Too Much</h3>
<p>I didn't clip this because it was boring, but after liberating dozens of prisoners, I spent no less than <strong>10 minutes </strong>moving them around. Thankfully, due to the way the map was designed, I was able to get almost all of them into the evac zone on the map's border, but this highlights another major UX problem.</p>
<p>In a previous case study, I examined the user interface (UI) of SD Gundam G Generation, another example of a turn-based strategy/tactics game. Part of the UI redesign process involved assessing the efficiency of the design, which led to the discovery of how heavily cumulative actions per turn contributes to turn length. The amount of actions rapidly compounds as unit count increases, which in turn leads to longer turns.</p>
<p>So, as you can imagine, having to control dozens of units <strong>individually </strong>leads to drawn out turns. </p>
<p>This leads to the question "Why control the prisoners individually?" And based on the modal that appeared, I <strong>think </strong>the idea was that the prisoners would be able to pick up gear from dead enemy units killed by the train. The problem is that it's functionally useless <strong>unless </strong>you happen to kill some enemies by the train.</p>
<p>So, in that case, why not have the group of four prisoners be controlled as a single unit? Either standing side by side or in a square, they would be much easier to manage.</p>
<h3 id="mcetoc_1hciv6c9q18e">The Evac Requirements are Insane</h3>
<figure class="post__video"><iframe loading="lazy" width="560" height="314" src="https://www.youtube-nocookie.com/embed/mR4d3uX0my0" allowfullscreen="allowfullscreen" data-mce-fragment="1"></iframe></figure>
<p>One good game design decision in Mars Tactics is having the edges of the maps serve as evacuation zones. This gives the player fantastic options for withdrawing their soldiers, and removes the hurdle of bad evac zone placement.</p>
<p>However, what is <strong>not </strong>great user experience is having to wait three turns before actually being able to evacuate a unit.</p>
<figure class="post__video"><iframe loading="lazy" width="560" height="314" src="https://www.youtube-nocookie.com/embed/E7ZQHR8IlQ8" allowfullscreen="allowfullscreen" data-mce-fragment="1"></iframe></figure>
<p>Not only did it mean that some of the people I freed got shot, but the evac limitations actually<strong> incentivized</strong> me to create a huge group of meat shields in the first place!</p>
<p>This is because I read the tooltip about the 3 turn requirement, realized most of my squad was a fair distance from the evac zone, and knew enemy reinforcements were coming. So I needed a <strong>lot </strong>of targets to ensure that A) some amount of prisoners would survive, and B) buy me enough time to get the squad moved towards the evac zone.</p>
<p>That plan fell apart the nanosecond an enemy soldier tossed a grenade and forced two of my soldiers <strong>away </strong>from the evac zone, which forced me to give up saving one of them (as seen above). Then I had one last soldier to evacuate, and that did not end well:</p>
<figure class="post__video"><iframe loading="lazy" width="560" height="314" src="https://www.youtube-nocookie.com/embed/sd8xRUfqQzo" allowfullscreen="allowfullscreen" data-mce-fragment="1"></iframe></figure>
<h3>Possible Ways to Improve the UX</h3>
<p>So, having gone over many of the UX issues that this game has, it's time to make some suggestions.</p>
<ul>
<li>Reduce AI aggression, and possibly vision radius, to increase player unit survival.</li>
<li>Make the LMG one of the weapons given to player characters in the demo.</li>
<li>Reduce required time in the evac zone from 3 turns to 1.</li>
<li>Reduce or eliminate scamper after explosive grenades land.</li>
<li>Have groups of 4 prisoners be controlled as a single unit.</li>
<li>Have step out either use a toggle instead of a hold, or automatically incorporate it into the shooting process.</li>
</ul>
<p>These are the most obvious UX changes that could possibly mitigate the difficulty issues. Whether or not these would actually solve most of the problems people have with Mars Tactics is an open question.</p>
<p>Right now, the demos suggest that the game might be less than the intended sum of its parts. But perhaps one change might be all the difference between the perception of unfun brutality, and a deep and engaging strategy/tactics game.</p>
<h3>Quick Notes on Patch 0.2.27</h3>
<p>While I was writing this article, the demo was patched. So, instead of posting without seeing if the patch addressed any of my complaints, I decided to fire it up for a quick session on the second level. (Having played possibly three hours of the first level, I have no interest in returning to it at present.)</p>
<p>The stated changes are as follows:</p>
<blockquote>
<p>Bugs<br>🐛 Fixed bug that crashed the game when booting up for the first time.<br>🐛 Fixed bug where Spaceport mission said you lost even though you all killed enemies.<br>🐛 Fixed bug where your units didn't recover health between missions.<br><br>Balance<br>🧠When scrambling from a flying grenade, units now estimate the grenade trajectory when planning their scramble route.<br>🎯When a hunkered unit becomes flanked, they lose their defense bonus. Pretty huge balance change!!!<br>🧀Turned off ability to modify grenade throwing arc as it was buggy. This feature will come back after I fix it properly.<br><br>QoL<br>👻 Enemies no longer teleport when running through obscured areas.<br>✨ Various UI and UX improvements</p>
</blockquote>
<p>It is unfortunate that there are no specifics on the UX/UI changes, but one that I think I spotted was a color change for the dashing movement radius from green to a light blue.</p>
<p>One thing that I realized after reading the patch notes is that <strong>I don't when units are flanked</strong>. In XCOM, the icon representing their amount of cover turns yellow/gold to show flanked status. In Mars Tactics, I don't have that information, so I can't strategize around it.</p>
<p>I couldn't tell much of a difference between pre- and post-patch scrambling from grenades, but that was complicated by the fact that one of my units actually had the ability to throw grenades back (which is awesome). I did run into a possible bug where you can throw an unprimed grenade, have another unit pick it up the following turn, then use the command to prime and throw said grenade, only to have it land and <strong>not </strong>detonate.</p>
<p>One odd thing I discovered playing the second level is that the objective might be bugged. You're supposed to get your squad onto a jet in the middle of the map and use it to evac. What I managed to do was get three squad members aboard, then it took off for some reason before I could get the rest on. (You should've seen my reaction to that.) I think it's a bug because there's a big button on the top third of the screen that says "Escape" and has the number of people on the plane on it, which isn't dismissed when the plane leaves.</p>
<figure class="post__image post__image--full"><img loading="lazy"  src="https://korgano.github.io/media/posts/6/20231013174212_1.jpg" alt="" width="1920" height="1080" sizes="(min-width: 37.5em) 1600px, 80vw" srcset="https://korgano.github.io/media/posts/6/responsive/20231013174212_1-xs.jpg 384w ,https://korgano.github.io/media/posts/6/responsive/20231013174212_1-sm.jpg 600w ,https://korgano.github.io/media/posts/6/responsive/20231013174212_1-md.jpg 768w ,https://korgano.github.io/media/posts/6/responsive/20231013174212_1-lg.jpg 1200w ,https://korgano.github.io/media/posts/6/responsive/20231013174212_1-xl.jpg 1600w"></figure>
<p>Most baffling is the Escape Battle command, which might be a response to the criticisms of the 3 turn to escape limit.</p>
<p>What this amounts to is spending the equivalent of two turns <strong>at best </strong>trying to escape by hammering the button. This assumes that the player's units are <strong>not </strong>being shot at, in which case, fulfilling this condition will result in at least <strong>three </strong>turns, because the player will spend at least one unit action moving the unit.</p>
<p>I'm not sure what the point of all these roadblocks to simply evacuating units are intended to do. By the time the player gets one or all of their units to the edge of the map (where the evac zones are), they're probably mentally exhausted by the current mission and ready to move on. Forcing the player to persist in the level, possibly while under attack by enemy forces that out number theirs, seems like a recipe to guarantee "cheap" deaths.</p>
<p>In a game where your units permanently die, there is nothing worse than losing characters to bad mechanics. Making bad tactical decisions or the AI being better is one thing - you can restart the mission or abuse saves to get around that. But bad mechanics are inescapable, because they're how the game <strong>works</strong>.</p>
<p>It's one thing in this demo, where you can get fresh soldiers with no issues. It's another when you have experienced soldiers you want to carry forward... only to have them get killed because they were stuck in the evac zone and got hit by a lucky shot. That's a decent investment of in-game resources gone, for no other result than an angry or sad player.</p>
<p>The Firaxis XCOM games make evacuation a free action, one you can do even when the units expend all their standard action points. There's a reason for that. At the end of a mission, the player is <strong>done</strong>. Let them go in peace, preferably with a button to evac everyone in the evac zone at once.</p>
            ]]>
        </content>
    </entry>
    <entry>
        <title>The UX &amp; Cybersecurity Case for More Local AI Hardware</title>
        <author>
            <name>Xavier Santana</name>
        </author>
        <link href="https://korgano.github.io/local-ai-hardware-ux-cybersecurity/"/>
        <id>https://korgano.github.io/local-ai-hardware-ux-cybersecurity/</id>
        <media:content url="https://korgano.github.io/media/posts/5/steve-johnson-_0iV9LmPDn0-unsplash.jpg" medium="image" />
            <category term="UX"/>
            <category term="Tech"/>
            <category term="Quick Thoughts"/>
            <category term="PC Hardware"/>
            <category term="PC"/>
            <category term="Cybersecurity"/>
            <category term="AI"/>

        <updated>2023-09-21T11:15:25-04:00</updated>
            <summary>
                <![CDATA[
                        <img src="https://korgano.github.io/media/posts/5/steve-johnson-_0iV9LmPDn0-unsplash.jpg" alt="" />
                    Earlier this week, two things crossed my path: Both of these are great things in my opinion. Let's get into&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                    <p><img src="https://korgano.github.io/media/posts/5/steve-johnson-_0iV9LmPDn0-unsplash.jpg" class="type:primaryImage" alt="" /></p>
                <p>Earlier this week, two things crossed my path:</p>
<ol>
<li><a href="https://chipsandcheese.com/2023/09/16/hot-chips-2023-amds-phoenix-soc/" title="Hot Chips 2023: AMD’s Phoenix SoC" target="_blank" rel="noopener noreferrer">A fantastic breakdown of AMD's latest laptop processors that feature their XDNA AI engines.</a></li>
<li>Intel's Innovation Days presentation, which showcased their new processors with local AI hardware (Neural Processing Units - NPUs).</li>
</ol>
<p>Both of these are great things in my opinion. Let's get into why.</p>
<div class="post__toc">
<h3>Table of Contents</h3>
<ul>
<li><a href="#mcetoc_1hauaonv2121">How Do People Use AI?</a></li>
<li><a href="#mcetoc_1hauaonv2122">The Cybersecurity Issues</a></li>
<li><a href="#mcetoc_1hauaonv2123">The UX Issues</a></li>
<li><a href="#mcetoc_1hauaonv2124">The Two Paths</a></li>
<li><a href="#mcetoc_1hauaonv2125">Wrap Up</a></li>
</ul>
</div>
<h3 id="mcetoc_1hauaonv2121">How Do People Use AI?</h3>
<p>The simplest possible explanation of the AI systems in the current zeitgeist is that they are pattern recognition and prediction machines. These Large Language Models (or LLMs) are trained on massive amounts of data. (We won't get into the ethical or artistic issues with this. If you want that, watch the following video:)</p>
<p class="align-center"><div class="post__iframe"><iframe loading="lazy" width="560" height="315" src="https://www.youtube-nocookie.com/embed/-MUEXGaxFDA?si=xcHgi-q_L6R9vt5c" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen"></iframe></div>
<p>The user will use some kind of interface - typically text based, but some visual interfaces do exist. The LLM will process the input, figure out the pattern of that input, and then predict the output based on that pattern. (This, incidentally, leads to the "hallucination" problem, where LLM based AI generate stuff that has no actual basis in the prompt or fact.)</p>
<p>There are two main ways these LLM based AI operate:</p>
<ol>
<li>On massive server farms.</li>
<li>On very expensive graphics cards or special processors.</li>
</ol>
<h3 id="mcetoc_1hauaonv2122">The Cybersecurity Issues</h3>
<p>Like it or not, everyone is going to be using LLM based AI in the near future, because if you know how to use them well, you can get some impressive productivity gains.</p>
<p>It also doesn't take a genius to recognize the problems here, especially in the context of the CIA triad:</p>
<ol>
<li>Confidentiality</li>
<li>Integrity</li>
<li>Availability</li>
</ol>
<p>Confidentiality, or keeping data out of the hands of anyone who is <strong>not </strong>supposed to have access, runs into a number of problems when you have server based LLMs:</p>
<ul>
<li>Can you keep the data confidential if you have to use someone else's LLM servers?</li>
<li>Can you ensure that the LLM provider isn't going to incorporate the data into their LLM's training model?</li>
<li>Increased risk of bad actors intercepting data as it moves between the end user PC and the server.</li>
<li>Leaky or improperly routed VPNs delivering the data to outside actors.</li>
<li>Increased opportunity for corporate competitors to track your progress by assessing volume of traffic between company PCs and LLM servers.</li>
</ul>
<p>And these are just the obvious confidentiality issues that I thought of in five minutes. Things are just as bad when we look at Integrity:</p>
<ul>
<li>Data manipulation of the input to the LLM as it travels to the server from the end user.</li>
<li>Data manipulation of the output from the LLM as it travels from the server to the end user.</li>
<li>Data corruption due to connection issues between the LLM server and end user.</li>
<li>Data corruption due to unannounced changes in how the LLM processes data.</li>
</ul>
<p>When it comes to availability, we've got a whole new set of problems:</p>
<ul>
<li>Stability of connection between the end user and LLM server.</li>
<li>Availability of LLM server resources.</li>
<li>Potential DDOS of the LLM server/port.</li>
<li>Local hardware being expensive and hard to obtain.</li>
<li>Local hardware availability.</li>
<li>Local hardware connection issues.</li>
</ul>
<h3 id="mcetoc_1hauaonv2123">The UX Issues</h3>
<p>The UX issues are honestly a near 1:1 overlap with the Cybersecurity ones, plus a few new ones:</p>
<ul>
<li>The inconvenience of having to sign up for an account.</li>
<li>Limited options to customize the interface.</li>
<li>Limited ability to use LLMs optimized to specific tasks.</li>
<li>Limited ability to use LLMs with little to no training/output bias.</li>
<li>Random service issues when LLM load is high.</li>
</ul>
<p>Essentially, AI as tool has a lot of hurdles <strong>because </strong>it's not practical to run on a local machine. But what if we could?</p>
<h3 id="mcetoc_1hauaonv2124">The Two Paths</h3>
<figure ><figure class="post__image post__image--full"><img loading="lazy"  src="https://i0.wp.com/chipsandcheese.com/wp-content/uploads/2023/09/amd_phx_if.jpg?ssl=1" alt="AMD slide showcasing 7040 &quot;Phoenix&quot; Processor, via Chips and Cheese" width="2557" height="1431" data-is-external-image="true"></figure>
<figcaption >AMD Ryzen 7040 "Phoenix" processor diagram, via Chips and Cheese</figcaption>
</figure>
<p>There are two main paths to get more local AI hardware in people's hands. The first is building it into new computer processors, like AMD and Intel are doing. These are focused on "inference," which is just a fancy way of saying "taking input into a trained LLM and generating output."</p>
<p>(Note: Intel's AI solution is called Neural Processing Units, but I will refer only to AI engines, because it does the same thing and is easier to remember.)</p>
<p>There are two main ways to do this:</p>
<ol>
<li>Devote a small part of the overall processor to AI functions.</li>
<li>Devote a large part of the overall processor to AI functions.</li>
</ol>
<p>Currently, Intel and AMD are releasing products that take the first way to do things. This makes sense from a risk mitigation point of view, but also constitutes a huge bet on the part of the hardware designers. They're not only betting on getting the design right, but that the total performance is going to be good enough for most of the lifespan of the CPU.</p>
<p>When you're a corporation that can justify replacing entire computers (or just the CPUs, if you're lucky) every 3-4 years, that's an acceptable risk. For an individual or small organization, the upsides are pretty high, but if you rely on AI for a lot of tasks and the programming for LLMs suddenly changes in a way your AI engine/other PC hardware can't handle, you're in a big pickle.</p>
<p>The other way to do it is to make a big chunk of the CPU an AI engine, like so:</p>
<figure ><figure class="post__image post__image--full"><img loading="lazy"  src="https://korgano.github.io/media/posts/5/mlid-june2023-AIE.png" alt="Moore's Law is Dead slide explaining Zen 5 Turin-AI Chiplets." width="1920" height="1055" sizes="(min-width: 37.5em) 1600px, 80vw" srcset="https://korgano.github.io/media/posts/5/responsive/mlid-june2023-AIE-xs.png 384w ,https://korgano.github.io/media/posts/5/responsive/mlid-june2023-AIE-sm.png 600w ,https://korgano.github.io/media/posts/5/responsive/mlid-june2023-AIE-md.png 768w ,https://korgano.github.io/media/posts/5/responsive/mlid-june2023-AIE-lg.png 1200w ,https://korgano.github.io/media/posts/5/responsive/mlid-june2023-AIE-xl.png 1600w"></figure>
<figcaption >Moore's Law is Dead slide explaining Zen 5 Turin-AI performance and configurations.</figcaption>
</figure>
<p><a href="https://www.youtube.com/watch?v=QU1DFBtbRWY" title="AMD 12C Zen 5 Strix on AM5: R9 8900G instead of 8900? (+ Turin-AI Update)" target="_blank" rel="noopener noreferrer">According to tech commentary and analysis channel Moore's Law is Dead</a>, AMD has developed a chiplet that provide more than enough performance for any individual's AI tasks.</p>
<p>For those unfamiliar with how AMD's CPUs are constructed, a chiplet is a small silicon chip with features that would form part of a single larger CPU. So in AMD's case, the actual processor cores are in one or more chiplets, while all the parts that communicate with the rest of the computer are in another. AMD designs its chiplets so that they can work across server, workstation, and desktop PC products.</p>
<p>With AI hardware in high demand, AMD is certainly going to make AI chiplets for servers. But workstation and desktop are a big question mark, especially since servers get the top tier chiplets. Theoretically, even the worst tier AI engine chiplets would provide excessive amounts of LLM AI task performance for even prosumer users.</p>
<p>Will AMD make such a CPU? Maybe. Go let AMD's social media accounts know you want that.</p>
<p>And this leads us to the second path, the M.2 add-on card.</p>
<p>In case you don't know what an M.2 anything is, here's an example:</p>
<figure class="post__image"><img loading="lazy"  src="https://assetsio.reedpopcdn.com/WD-Black-SN850X-SSD_5rmoNZy.jpg?width=690&amp;quality=80&amp;format=jpg&amp;auto=webp" alt="WD Black SN850X M.2 NVMe SSD" width="690" height="388" data-is-external-image="true"></figure>
<p>If something the size of a stick of gum that could handle all your AI engine needs sounds attractive, you are not alone. <a href="https://youtu.be/tl1m09ZyfDg?t=2042" title="Meteor Lake Tech Tour Deep Dive" target="null">As it turns out, the company behind Intel's AI engine has actually <strong>made </strong>these devices</a>... they are just being sold to industrial firms. But the fact that they're aware that people want them means there's a chance we can get them down the line.</p>
<p>What's especially exciting about the idea of an AI engine on an M.2 is the fact that it gives people <strong>options</strong>. It's not a huge component, or something that's going to be stuck under a heat sink/watercooling solution that's a pain to disassemble. You could stick them in any computer with an M.2 drive, even if the performance wouldn't be great for older PCs. You could potentially have two or more side-by-side in a special adapter that would give you tons of AI processing capabilities.</p>
<p>And this is before we even get into the possibilities of combining the two paths by using <strong>both </strong>CPU integrated and M.2 add-on AI engines.</p>
<h3 id="mcetoc_1hauaonv2125">Wrap Up</h3>
<p>To sum it all up, more local AI hardware solves a number of cybersecurity problems:</p>
<table style="border-collapse: collapse; width: 100%;" border="1">
<tbody>
<tr>
<td class="align-center" style="width: 33.2853%;"><strong>Confidentiality</strong></td>
<td class="align-center" style="width: 33.2853%;"><strong>Integrity</strong></td>
<td class="align-center" style="width: 33.287%;"><strong>Availability</strong></td>
</tr>
<tr>
<td style="width: 33.2853%;">Keeping data confidential.</td>
<td style="width: 33.2853%;">Data manipulation of LLM input enroute to LLM.</td>
<td style="width: 33.287%;">Stability of connection between the end user/LLM server.</td>
</tr>
<tr>
<td style="width: 33.2853%;">Risk of LLM developer incorporating confidential data in training model.</td>
<td style="width: 33.2853%;">Data manipulation of LLM output enroute to end user.</td>
<td style="width: 33.287%;">Availability of LLM server resources.</td>
</tr>
<tr>
<td style="width: 33.2853%;">Interception of data enroute to LLM.</td>
<td style="width: 33.2853%;">Data corruption due to issues in LLM/end user connection.</td>
<td style="width: 33.287%;">Potential DDOS of the LLM server/port.</td>
</tr>
<tr>
<td style="width: 33.2853%;">Improper VPN setups leaking data/delivering data to wrong destination.</td>
<td style="width: 33.2853%;">Data corruption due to unannounced LLM changes.</td>
<td style="width: 33.287%;">Local hardware availability.</td>
</tr>
<tr>
<td style="width: 33.2853%;">Less traffic for competitors to analyze.</td>
<td style="width: 33.2853%;"> </td>
<td style="width: 33.287%;">Local hardware connection issues.</td>
</tr>
</tbody>
</table>
<p>It also provides opportunities to solve the following UX problems:</p>
<ul>
<li>The inconvenience of having to sign up for an account.</li>
<li>Limited options to customize the interface.</li>
<li>Limited ability to use LLMs optimized to specific tasks.</li>
<li>Limited ability to use LLMs with little to no training/output bias.</li>
<li>Random service issues when LLM load is high.</li>
</ul>
<p>With two main paths to getting more local AI hardware, either as parts of CPUs or in standalone add-on cards, the future looks bright for local AI. But it'll take a decent amount of yelling at the social media clouds to get everyone the hardware they deserve. And without that hardware being available, there's not much incentive or ability to work on the UX problems.</p>
<p>So let's get that social media campaign going, and </p>
            ]]>
        </content>
    </entry>
    <entry>
        <title>User Experience Report: Publii, Day 1</title>
        <author>
            <name>Xavier Santana</name>
        </author>
        <link href="https://korgano.github.io/user-experience-report-publii-day-1/"/>
        <id>https://korgano.github.io/user-experience-report-publii-day-1/</id>
        <media:content url="https://korgano.github.io/media/posts/4/vadim-sherbakov-RcdV8rnXSeE-unsplash.jpg" medium="image" />
            <category term="UX"/>
            <category term="Tech"/>
            <category term="Quick Thoughts"/>

        <updated>2023-09-14T14:27:11-04:00</updated>
            <summary>
                <![CDATA[
                        <img src="https://korgano.github.io/media/posts/4/vadim-sherbakov-RcdV8rnXSeE-unsplash.jpg" alt="Two flat screen monitor turned on near organizer rack inside the room." />
                    This is going to be a fairly brief, by my standards, post. Rebuilding a portfolio site from scratch is a&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                    <p><img src="https://korgano.github.io/media/posts/4/vadim-sherbakov-RcdV8rnXSeE-unsplash.jpg" class="type:primaryImage" alt="Two flat screen monitor turned on near organizer rack inside the room." /></p>
                <p>This is going to be a fairly brief, by my standards, post.</p>
<p>Rebuilding a portfolio site from scratch is a time-consuming task. While I considered building one from scratch with plain old HTML, CSS, and Bootstrap, I realized that wasn't practical. So I looked for a Content Management System that was free and could upload to Github pages.</p>
<p>And I found Publii, which is all those things, and locally hosted!</p>
<p>In terms of User Interface and Experience, I much prefer it to WordPress. That's simply because Publii isn't at the stage where it has tons and tons of settings and add-ons to configure. It's got the essentials, some nice to have features, good layout, and good documentation.</p>
<p>It's good enough, and I'm fine with that.</p>
<p>There are some oddities when working with themes though. I'm currently using the free version of the <a href="https://marketplace.getpublii.com/themes/persona/" target="_blank" rel="noopener noreferrer">Persona theme</a>, and some of the color options don't do what you expect.</p>
<p>For one thing, I set the link hover option to a shade of green, and the text to a shade of blue. But on the nav menu and author names, the colors are reversed. (I think it looks good, so I'm not complaining, but it is weird.)</p>
<p>The animated line's color was controlled by a "Color" setting - that's right, no real details, just the word "Color". Luckily, I didn't do anything horrible in changing it, but the lack of clarity was a definite knock on the theme. The inability to further customize the animation is annoying, but perhaps that an exclusive feature of the paid themes.</p>
<p>Speed and performance of the software is good, and I <strong>greatly </strong>appreciate the ability to choose "Save draft" as an option before I save anything I post.</p>
<p>One limitation of the software is that it seems excessively blog focused. You can't actually make a standard page. You just make posts, and then use a specialized page to show off all the posts with a specific tag. It's quite odd, but not a huge negative.</p>
<p>One <strong>huge </strong>positive is the fact that I can actually set the width of various elements quickly and easily. So no huge amounts of wasted space on my site!</p>
<p>In terms of content, it's a mixed bag. Even though I have backups of most of my previous content from my old UXZone.io site, it's not in an easily importable format. So It'll be a slow process of getting the old content extracted from the backup and converted to the new site.</p>
<p>But hey, at least I didn't lose it all!</p>
            ]]>
        </content>
    </entry>
</feed>
